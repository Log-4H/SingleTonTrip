<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberMapper">
<!-- 로그인 -->
<select id="login" parameterType="map" resultType="com.log4h.singletontrip.member.domain.LoginVo">
	SELECT 
		member_id,
		member_pw,
		member_nm,
		member_level
	FROM
		tb_member
	WHERE
		member_id = #{loginId}
	AND
		member_pw = #{loginPw}
</select>

<!-- 개인회원가입 -->
<insert id="personMemberJoin" parameterType="com.log4h.singletontrip.member.domain.PersonVo">
	INSERT INTO tb_member(
		member_id,
		member_level,
		member_pw,
		member_nm,
		member_phone,
		member_email,
		member_reg_date
		<if test="personImg != null and personImg !=''">
		,member_img
		</if>
		)
	VALUE(
		#{memberId},
		#{memberLevel},
		#{memberPw},
		#{memberNm},
		#{memberPhone},
		#{memberEmail},
		now()
		<if test="personImg != null and personImg !=''">
		,#{personImg}
		</if>
		)
</insert>

<select id="companyTypeList" resultType="com.log4h.singletontrip.member.domain.CompanyTypeVo">
	SELECT
		company_type_cd,
		company_type_nm
	FROM
		tb_company_type
</select>

<!-- 업체회원가입 -->
<insert id="companyMemberJoin" parameterType="com.log4h.singletontrip.member.domain.CompanyVo">
	INSERT INTO tb_member(
		member_id,
		member_level,
		member_pw,
		member_nm,
		member_phone,
		member_email,
		member_reg_date
		<if test="companyImg != null and companyImg !=''">
		,member_img
		</if>
		)
	VALUE(
		#{memberId},
		#{memberLevel},
		#{memberPw},
		#{memberNm},
		#{memberPhone},
		#{memberEmail},
		now()
		<if test="companyImg != null and companyImg !=''">
		,#{companyImg}
		</if>
		)
</insert>

<!-- 개인테이블에 추가 데이터 삽입 -->
<insert id="personJoin" parameterType="com.log4h.singletontrip.member.domain.PersonVo">
	INSERT INTO tb_person(
		person_id,
		person_birth,
		person_gender
		)
	VALUE(
		#{memberId},
		#{personBirth},
		#{personGender}
		)
</insert>

<!-- 업체테이블에 추가 데이터 삽입 -->
<insert id="companyJoin" parameterType="com.log4h.singletontrip.member.domain.CompanyVo">
	INSERT INTO tb_company(
		company_id,
		company_crd,
		company_type_cd,
		company_address,
		company_nm
		)
	VALUE(
		#{memberId},
		#{companyCrd},
		#{companyTypeCd},
		#{companyAddress},
		#{companyNm}
		)
</insert>

<!-- 개인회원 총 카운트 -->
<select id="personTotalCount" parameterType="Map" resultType="int">
	SELECT
		COUNT(*)
	FROM
		tb_member m
	JOIN
		tb_person p
	ON 
		m.member_id = p.person_id
	<if test="selectValue != null and selectValue !=''">
	WHERE
		${selectOption} LIKE '%${selectValue}%'
	</if>

</select>

<!-- 개인회원리스트 -->
<select id="personList" parameterType="Map" resultType="com.log4h.singletontrip.member.domain.PersonVo">
	SELECT
		m.member_id,
		m.member_nm,
		m.member_phone,
		m.member_email,
		p.person_birth,
		p.person_gender,
		a.act_state_nm,
		f.approve_state_cd as friendState
	FROM
		tb_member m
	JOIN
		tb_person p
	ON 
		m.member_id = p.person_id
	JOIN 
		tb_act_state a
	ON 
		m.act_state_cd = a.act_state_cd	
	LEFT OUTER JOIN 
		tb_friend f
	ON 
		m.member_id = f.friend_id
	AND f.member_id =#{sessionId}
	<if test="selectValue != null and selectValue !=''">
	WHERE
		${selectOption} LIKE '%${selectValue}%'
	</if>
	ORDER BY m.member_reg_date
	DESC LIMIT #{beginRow}, #{pagePerRow}
</select>

<!-- 업체회원 총 카운트 -->
<select id="companyTotalCount" parameterType="Map" resultType="int">
	SELECT
		COUNT(*)
	FROM
		tb_member m
	JOIN
		tb_company c
	ON 
		m.member_id = c.company_id
	JOIN
		tb_company_type t
	ON
		c.company_type_cd = t.company_type_cd
	<if test="selectValue != null and selectValue !=''">
	WHERE
		${selectOption} LIKE '%${selectValue}%'
	</if>

</select>

<!-- 업체회원리스트 -->
<select id="companyList" parameterType="Map" resultType="com.log4h.singletontrip.member.domain.CompanyVo">
	SELECT
		m.member_id,
		m.member_nm,
		m.member_phone,
		m.member_email,
		m.member_img,
		c.company_nm,
		c.company_address,
		c.company_crd,
		t.company_type_nm,
		t.company_type_cd,
		a.act_state_nm
	FROM
		tb_member m
	JOIN
		tb_company c
	ON 
		m.member_id = c.company_id
	JOIN 
		tb_company_type t
	ON 
		c.company_type_cd = t.company_type_cd
	JOIN 
		tb_act_state a
	ON 
		m.act_state_cd = a.act_state_cd	
	<if test="selectValue != null and selectValue !=''">
	WHERE
		${selectOption} LIKE '%${selectValue}%'
	</if>
	ORDER BY m.member_reg_date
	DESC LIMIT #{beginRow}, #{pagePerRow}
</select>

<!-- 개인회원상세보기 -->
<select id="personDetail" parameterType="String" resultType="com.log4h.singletontrip.member.domain.PersonVo">
	SELECT
		m.member_id,
		m.member_nm,
		m.member_phone,
		m.member_email,
		m.member_report_count,
		p.person_birth,
		p.person_gender,
		p.person_total_mileage,
		t.trip_state_nm,
		a.act_state_nm
	FROM
		tb_member m
	JOIN
		tb_person p
	ON 
		m.member_id = p.person_id
	JOIN 
		tb_act_state a
	ON 
		m.act_state_cd = a.act_state_cd
	JOIN
		tb_trip_state t
	ON 
		p.trip_state_cd = t.trip_state_cd
	WHERE
		member_id=#{memberId}
</select>

<!-- 업체회원상세보기 -->
<select id="companyDetail" parameterType="String" resultType="com.log4h.singletontrip.member.domain.CompanyVo">
	SELECT
		m.member_id,
		m.member_nm,
		m.member_phone,
		m.member_email,
		m.member_report_count,
		c.company_crd,
		t.company_type_cd,
		t.company_type_nm,
		c.company_address,
		a.act_state_nm
	FROM
		tb_member m
	JOIN
		tb_company c
	ON 
		m.member_id = c.company_id
	JOIN 
		tb_company_type t
	ON 
		c.company_type_cd = t.company_type_cd	
	JOIN 
		tb_act_state a
	ON 
		m.act_state_cd = a.act_state_cd
	WHERE
		member_id=#{memberId}
</select>

<!-- 회원탈퇴처리 -->
<update id="memberDrop" parameterType="Map">
	UPDATE
		tb_member
	SET
		act_state_cd='6',
		member_drop_date=now(),
		member_drop_reason='test'
	WHERE
		member_id= #{memberId}
	AND
		member_pw= #{memberPw}
</update>

<!-- 개인회원정보수정 -->
<update id="personModify" parameterType="com.log4h.singletontrip.member.domain.PersonVo">
	UPDATE
		tb_member, tb_person
	SET
		member_nm=#{memberNm},
		member_phone=#{memberPhone},
		member_email=#{memberEmail},
		person_birth=#{personBirth},
		person_gender=#{personGender}
	<if test="newPw != null and newPw !=''">
		,member_pw=#{newPw}
	</if>
	<if test="personImg != null and personImg !=''">
		,member_img=#{personImg}
	</if>
	WHERE
		member_id=#{memberId}
	AND
		member_pw=#{memberPw}
</update>

<!-- 업체회원정보수정 -->
<update id="companyModify" parameterType="com.log4h.singletontrip.member.domain.CompanyVo">
	UPDATE
		tb_member, tb_company
	SET
		member_nm=#{memberNm},
		member_phone=#{memberPhone},
		member_email=#{memberEmail},
		company_type_cd=#{companyTypeCd},
		company_crd=#{companyCrd},
		company_Address=#{companyAddress}
	<if test="newPw != null and newPw !=''">
		,member_pw=#{newPw}
	</if>
	<if test="companyImg != null and companyImg !=''">
		,member_img=#{companyImg}
	</if>
	WHERE
		member_id=#{memberId}
	AND
		member_pw=#{memberPw}
</update>

<!-- 아이디찾기 -->
<select id="memberIdFind" parameterType="Map" resultType="com.log4h.singletontrip.member.domain.MemberVo">
	SELECT
		member_id,
		member_nm,
		member_email
	from
		tb_member
	where
		member_nm=#{memberNm}
	AND
		member_email=#{memberEmail}
</select>

<!-- 비밀번호찾기 -->
<select id="memberPwFind" parameterType="Map" resultType="com.log4h.singletontrip.member.domain.MemberVo">
	SELECT
		member_nm,
		member_email
	from
		tb_member
	where
		member_id=#{memberId}
	AND	
		member_nm=#{memberNm}
	AND
		member_email=#{memberEmail}
</select>
<!-- 임시비밀번호 업데이트 -->
<update id="memberPwUpdate" parameterType="Map">
	UPDATE
		tb_member
	SET
		member_pw=#{randomPw}
	where
		member_id=#{memberId}
</update>

<!-- 친구추가 -->
<insert id="friendAdd" parameterType="Map">
	INSERT INTO tb_friend
		(
		member_id,
		friend_id,
		approve_state_cd,
		friend_apply_date
		)
	VALUE
		(
		#{memberId},
		#{friendId},
		1,
		now()
		)
	
</insert>
<!-- 친구요청리스트 -->
<select id="friendAddList" parameterType="String" resultType="com.log4h.singletontrip.member.domain.MemberVo">
	SELECT
		 f.member_id,
		 m.member_nm,
		 a.approve_state_nm
	FROM
		tb_friend f
	JOIN
		tb_approve_state a
	ON
		f.approve_state_cd = a.approve_state_cd
	JOIN
		tb_member m
	ON
		f.member_id = m.member_id
	WHERE
		f.friend_id=#{memberId} 
	AND
		f.approve_state_cd='1'
</select>
<!-- 친구요청 수락&거절 -->
<update id="friendApprove" parameterType="Map">
	UPDATE
 		tb_friend
 	SET
 		approve_state_cd=#{approveStateCd},
 		friend_approve_date=now()
 	WHERE
 		member_id=#{memberId}
	AND
		friend_id=#{sessionId}
 		
</update>
<!-- 친구요청 수락하면 친구 요청한 쪽에 리스트 추가 -->
<insert id="friendApproveAdd" parameterType="Map">
	INSERT INTO tb_friend
		(
		member_id,
		friend_id,
		approve_state_cd,
		friend_apply_date
		)
	VALUE
		(
		#{sessionId},
		#{memberId},
		2,
		now()
		)
	
</insert>
<!-- 친구리스트 -->
<select id="friendTotalList" parameterType="String" resultType="com.log4h.singletontrip.member.domain.MemberVo">
	SELECT
		 f.friend_id,
		 m.member_nm
	FROM
		tb_friend f
	JOIN
		tb_member m
	ON
		f.friend_id = m.member_id
	WHERE
		f.member_id=#{sessionId}
	AND
		f.approve_state_cd='2'
</select>
<!-- 친구신청확인 -->
<select id="friendCheckList" parameterType="String" resultType="com.log4h.singletontrip.member.domain.MemberVo">
	SELECT
		 f.friend_id,
		 m.member_nm,
		 a.approve_state_nm
	FROM
		tb_friend f
	JOIN
		tb_member m
	ON
		f.friend_id = m.member_id
	JOIN
		tb_approve_state a
	ON
		f.approve_state_cd = a.approve_state_cd
	WHERE
		f.member_id=#{sessionId}
	AND
		f.approve_state_cd='1'
	
</select>
<!-- 친구삭제 -->
<delete id="friendDelete" parameterType="Map">
	DELETE FROM
		tb_friend
	WHERE
		(member_id=#{sessionId} AND friend_id=#{friendId})
	OR
		(member_id=#{friendId} AND friend_id=#{sessionId})
</delete>
</mapper>